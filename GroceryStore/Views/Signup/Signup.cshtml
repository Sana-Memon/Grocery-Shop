@model GroceryStore.Models.User

@{
    Layout = null;
}

<!DOCTYPE HTML>
<html lang="zxx">

<head>
    <title>Sign Up</title>
    <!-- Meta tag Keywords -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="UTF-8" />
    <meta name="keywords" content="Full Screen Enroll Form Responsive Widget,Login form widgets, Sign up Web forms , Login signup Responsive web form,Flat Pricing table,Flat Drop downs,Registration Forms,News letter Forms,Elements" />
    <script>
        addEventListener("load", function () {
            setTimeout(hideURLbar, 0);
        }, false);

        function hideURLbar() {
            window.scrollTo(0, 1);
        }
    </script>
    <!-- Meta tag Keywords -->
    <!-- css files -->
    <link rel="stylesheet" href="~/css/style-signup.css" type="text/css" media="all" />
    <!-- Style-CSS -->
    <link rel="stylesheet" href="~/css/font-awesome-signup.min.css">
    <!-- Font-Awesome-Icons-CSS -->
    <!-- //css files -->
    <!-- web-fonts -->
    <link href="//fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i&amp;subset=devanagari,latin-ext"
          rel="stylesheet">
    <!-- //web-fonts -->
</head>

<body>
    @using (Html.BeginForm("Signup", "Signup", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="main-w3ls">
            <div class="left-content">
                <div class="w3ls-content">
                    <!-- logo -->
                    <h1>
                        <a href="../Home/Index"><span class="fa fa-magic"></span>Feed your family the best </a>
                    </h1>
                    <!-- //logo -->
                    <h2>Make Your Grocery Shopping Easy with Us</h2>
                    <a href="#" class="button-w3ls">
                        <span class="fa fa-long-arrow-right"></span>
                    </a>
                    <ul class="nav-w3ls">
                        <li>
                            <a href="../Home/Index">Home</a>
                        </li>
                        <li>
                            <a href="../About/About">About Us</a>
                        </li>

                        <li>
                            <a href="../Contact/Contact">Contact Us</a>
                        </li>
                    </ul>
                </div>

            </div>
            <div class="right-form-agile">
                <!-- content -->
                <div class="sub-main-w3">
                    <h3>Signup Now</h3>
                    <h5>Creating an account is free..</h5>
                    <p>and won't take longer than a couple os seconds</p>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-style-agile">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="pom-agile">
                            <span class="fa fa-user"></span>

                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-style-agile">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="pom-agile">
                            <span class="fa fa-user"></span>

                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-style-agile">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="pom-agile">
                            <span class="fa fa-envelope-open"></span>

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-style-agile">
                        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="pom-agile">
                            <span class="fa fa-phone"></span>

                            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-style-agile">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="pom-agile">
                            <span class="fa fa-key"></span>

                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-style-agile">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="pom-agile">
                            <span class="fa fa-key"></span>

                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="sub-agile">
                        <input type="checkbox" id="brand1" value="">
                        <label for="brand1">
                            <span></span>I Accept to the Terms & Conditions
                        </label>
                    </div>
                    <input type="submit" value="Create">

                    <label class="label-success"> @ViewBag.SuccessMessage</label>



                    <!-- social icons -->
                    <div class="w3ls-social">
                        <h3>or Login with</h3>
                        <ul class="social-nav model-3d-0 footer-social social two">
                            <li>
                                <a href="#" class="facebook">
                                    <span class="fa fa-facebook"></span>
                                </a>
                            </li>
                            <li>
                                <a href="#" class="twitter">
                                    <span class="fa fa-twitter"></span>
                                </a>
                            </li>
                            <li>
                                <a href="#" class="instagram">
                                    <span class="fa fa-instagram"></span>
                                </a>
                            </li>
                            <li>
                                <a href="#" class="pinterest">
                                    <span class="fa fa-linkedin"></span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- //social icons -->
                </div>
            </div>
        </div>
        <!-- //content -->

    }


    @section scripts
    {
        @Scripts.Render("~/Scripts/jquery.validate.js")
    }
</body>

</html>